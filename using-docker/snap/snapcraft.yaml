name: tocker
base: core22
version: '1.0'
summary: An example snap for interacting with the Docker snap
description: |
  This snap moves a Docker-based workflow to a snap'd environment on Ubuntu
  Core. This snap shows how one would interact with the Docker snap, namely
  through a content sharing interface exposed by the Docker snap to gain access
  to its executables and libraries, along with a collection of simple scripts to
  use those executables.

grade: stable
confinement: strict

# The daemons are installed as disabled because the docker{-executables} and
# interfaces are not auto-connecting. They can be installed as enabled if
# interface auto-connection is enabled either in the Store UI or in the gadget snap.
apps:
  tocker:
    command: usr/bin/tocker_run.sh
    plugs: [docker, docker-executables]
    environment:
      PATH: $SNAP/docker-bin/bin:$PATH
      DOCKER_CONFIG: $SNAP_COMMON/.docker

  ticker:
    command: usr/bin/tocker_compose.sh
    daemon: simple
    install-mode: disable
    plugs: [docker, docker-executables]
    environment:
      PATH: $SNAP/docker-bin/bin:$PATH
      DOCKER_CONFIG: $SNAP_COMMON/.docker

  nginx-volume:
    command: usr/bin/tocker_volume.sh
    daemon: simple
    install-mode: disable
    plugs: [docker, docker-executables]
    environment:
      PATH: $SNAP/docker-bin/bin:$PATH
      DOCKER_CONFIG: $SNAP_COMMON/.docker

  jenkins1:
    command: usr/bin/tocker_jenkins1.sh
    plugs: [docker, docker-executables]
    environment:
      PATH: $SNAP/docker-bin/bin:$PATH
      DOCKER_CONFIG: $SNAP_COMMON/.docker

  jenkins2:
    command: usr/bin/tocker_jenkins2.sh
    plugs: [docker, docker-executables]
    environment:
      PATH: $SNAP/docker-bin/bin:$PATH
      DOCKER_CONFIG: $SNAP_COMMON/.docker

  edgex:
    command: usr/bin/tocker_edgex.sh
    daemon: simple
    install-mode: disable
    plugs: [docker, docker-executables]
    environment:
      PATH: $SNAP/docker-bin/bin:$PATH
      DOCKER_CONFIG: $SNAP_COMMON/.docker

  rest:
    command: usr/bin/tocker_rest.sh
    plugs: [docker]

parts:
  copy-src:
    plugin: dump
    source: src/

  edgex:
    plugin: nil
    override-pull: |
      _release=levski
      _compose=docker-compose-no-secty
      curl -fLo edgex-compose.yml \
         https://raw.githubusercontent.com/edgexfoundry/edgex-compose/${_release}/${_compose}.yml

      install -Dm644 edgex-compose.yml ${CRAFT_PART_BUILD}/edgex-compose.yml
    override-build: |
      # Work around a known Apparmor issue:
      # https://bugs.launchpad.net/snappy/+bug/1908448
      sed -i '/security_opt\:/{N;d;}' edgex-compose.yml
      sed -i '/- no-new-privileges\:true/d' edgex-compose.yml

      install -Dm644 edgex-compose.yml \
        ${CRAFT_PART_INSTALL}/usr/share/composers/edgex-compose.yml

  seed-image:
    plugin: nil
    build-packages: [docker.io]
    override-build: |
      # If we already have images in the project directory, assume that is all
      # of the images we want to include
      craftctl default

      _images_exist=false
      for _image in "${CRAFT_PROJECT_DIR}/images/"*.docker; do
        [ -e "$_image" ] || continue
        install -Dm644 "$_image" "${CRAFT_PART_INSTALL}/usr/share/images/${_image##*/}"
        _images_exist=true
      done

      [ "$_images_exist" = "true" ] || {
        systemctl is-active -q docker || systemctl start docker
        docker pull hello-world       || sleep 30 && docker pull hello-world

        mkdir -p "${CRAFT_PART_INSTALL}/usr/share/images"
        # Fetch a trivial example
        docker save \
          -o "${CRAFT_PART_INSTALL}/usr/share/images/hello-world.docker" \
          hello-world
      }

  rest-api:
    plugin: nil
    stage-packages: [curl]

plugs:
  docker-executables:
    interface: content
    content: executables
    target: $SNAP/docker-bin
    default-provider: docker
# In general the personal-files interface should not be used
# Only enable this if using DOCKER_CONFIG or passing --config is unavailable
#  root-dot-docker:
#    interface: personal-files
#    write:
#      - $HOME/.docker

layout:
  /usr/libexec/docker/cli-plugins:
    symlink: $SNAP/docker-bin/usr/libexec/docker/cli-plugins

hooks:
  configure:
    plugs: [docker, docker-executables]
    environment:
      PATH: $SNAP/docker-bin/bin:$PATH
  connect-plug-docker:
    plugs: [docker, docker-executables]
    environment:
      PATH: $SNAP/docker-bin/bin:$PATH
